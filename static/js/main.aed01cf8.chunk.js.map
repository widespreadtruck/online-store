{"version":3,"sources":["assets/img/pizza-logo.svg","assets/img/empty-cart.png","components/Button/Button.js","components/PizzaBlock/PizzaBlock.js","components/Categories/Categories.js","components/SortPopUp/SortPopUp.js","redux/actions/pizzas.js","Pages/Home.js","redux/actions/cart.js","redux/actions/filters.js","components/Header/Header.js","Pages/Cart.js","components/PizzaBlock/PizzaLoadingBlock.js","components/CartItem/CartItem.js","components/CategoriesPopUp/CategoriesPopUp.js","components/EmptyCart/EmptyCart.js","components/ClearCart/ClearCart.js","App.js","redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","className","outline","children","onClick","classNames","PizzaBlock","id","imageUrl","name","sizes","price","types","onClickAddPizza","addedCount","useState","activeSize","setActiveSize","activeType","setActiveType","typeNames","availableSizes","src","alt","map","type","index","key","active","disabled","includes","onSelectType","size","obj","width","height","viewBox","fill","xmlns","d","defaultProps","isLoading","Categories","React","memo","items","onClickCategory","activeCategory","SortPopUp","onClickSortType","activeSortType","visiblePopUp","setVisiblePopUp","sortRef","useRef","activeLabel","find","ref","order","onSelectItem","setPizzas","payload","categoryNames","sortItems","Home","dispatch","useDispatch","cartItems","useSelector","cart","state","pizzas","isLoaded","filters","category","sortBy","handleAddPizzaToCart","addPizzaToCart","onSelectCategory","useCallback","onSelectSortType","window","innerWidth","setWidth","useEffect","axios","get","then","data","fetchPizzas","handleResizeWindow","addEventListener","removeEventListener","categoryUpdated","length","Array","_","Header","totalPrice","totalCount","to","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Cart","handleRemoveOneItem","removeOneItem","handleAddOneItem","addOneItem","onRemoveItem","removeCartItem","addedPizzas","Object","keys","isCartEmpty","values","flat","onRemove","onRemoveOneItem","onAddOneItem","PizzaLoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","CartItem","CategoriesPopUp","currentSelection","EmptyCart","ClearCart","handleClearCart","App","path","component","exact","initialState","action","getTotalPrice","arr","reduce","sum","currentPizzaItems","newItems","updatedItems","currentTotalPrice","currentTotalCount","oldItems","slice","rootReducer","combineReducers","filtersReducer","pizzasReducer","cartReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aed01cf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.db34c559.png\";","import React from 'react';\nimport classNames from 'classnames';\n\nconst Button = ({ className, outline, children, onClick }) => {\n    return (\n        <button\n            onClick={onClick}\n            className={classNames('button',  className, {\n                'button--outline': outline\n            })}>\n            {children}\n        </button>\n    );\n};\n\n\nexport default Button;","import React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport './PizzaBlock.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst PizzaBlock = ({ id, imageUrl, name, sizes, price, types, onClickAddPizza, addedCount } ) => {\n    const [activeSize, setActiveSize] = useState(sizes[0]);\n    const [activeType, setActiveType] = useState(types[0]);\n\n    //all existing pizza types & sizes\n    const typeNames = [\"thin crust\", \"regular crust\"];\n    const availableSizes = [26, 30, 40];\n    \n    const onSelectType = (index) => {\n        setActiveType(index);\n    }\n\n    const onSelectSize = (index) => {\n        setActiveSize(index);\n    }\n\n    const onAddPizza = () => {\n        const obj = {\n            id,\n            imageUrl,\n            name,\n            price, \n            size: activeSize,\n            type: typeNames[activeType],\n        }\n        onClickAddPizza(obj);\n    }\n\n\n    return(\n        <div className=\"pizza-block\">\n            <img\n                className=\"pizza-block__image\"\n                src={imageUrl}\n                alt=\"Pizza\"\n            />\n            <h4 className=\"pizza-block__title\">{name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {typeNames &&\n                        typeNames.map((type, index) => {\n                            return(\n                                <li \n                                    key={type}\n                                    className={classNames({\n                                        active: activeType === index,\n                                        disabled: !types.includes(index),\n                                    })}\n                                    onClick={() => onSelectType(index)}\n                                >\n                                    {type}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                <ul>\n                    { availableSizes &&\n                        availableSizes.map( (size) => {\n                            return <li \n                                        key={size} \n                                        className={classNames({\n                                            active: activeSize === size,\n                                            disabled: !sizes.includes(size),\n                                        })}\n                                        onClick={ () => onSelectSize(size)}\n                                    >\n                                        {size} cm.\n                                    </li>\n                            })\n                    }\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">from ${price}</div>\n                <Button \n                    onClick={onAddPizza}\n                    className='button--add' \n                    outline \n                >\n                    <svg\n                        width=\"12\"\n                        height=\"12\"\n                        viewBox=\"0 0 12 12\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                            fill=\"white\"\n                        />\n                    </svg>\n                    <span>Add</span>\n                    {\n                    addedCount\n                        ? <i>{addedCount}</i>\n                        : <i>0</i>\n                    }\n                </Button>\n            </div>\n        </div> \n    );\n}\n\nexport default PizzaBlock;\n\n//making sure Property Types are correct\nPizzaBlock.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    sizes: PropTypes.arrayOf(PropTypes.oneOf([26, 30, 40])).isRequired,\n    price: PropTypes.number.isRequired,\n    types: PropTypes.arrayOf(PropTypes.number).isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    // onClickAddPizza: PropTypes.func.isRequired\n    addedCount: PropTypes.number\n};\n\n//adding Default Props\nPizzaBlock.defaultProps = {\n    name: '---',\n    price: 0,\n    types: [],\n    sizes: [],\n    imageUrl: 'image',\n    isLoading: false\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Categories = React.memo(function Categories({ items, onClickCategory, activeCategory }) {\n\n    return (\n        <div className=\"categories\">\n            <ul>           \n                <li className={activeCategory === null ? 'active' : ''} onClick={ () => onClickCategory(null)}>All</li>     \n                {items &&\n                    items.map( (name, index)=>{\n                        return <li \n                        className={activeCategory === index ? 'active' : ''} \n                        onClick={() => onClickCategory(index)}\n                        key={`${name}_${index}`}\n                        >\n                            {name}\n                        </li>\n                    })\n                }                \n            </ul>\n        </div>\n    );\n}\n)\n\n//making sure Property Types are correct\nCategories.propTypes = {\n    // activeCategory: PropTypes.oneOf([PropTypes.number, null]),\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onSelectItem: PropTypes.func\n};\n\n//adding Default Props\nCategories.defaultProps = {\n    items: [],\n    activeCategory: null\n}\n\nexport default Categories;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './SortPopUp.scss';\n\nconst SortPopUp = React.memo( function SortPopUp( { items, onClickSortType, activeSortType } ) {\n    const [visiblePopUp, setVisiblePopUp] = useState(false);\n\n    const sortRef = useRef();\n    let activeLabel = items.find((obj)=>obj.name === activeSortType).name;\n\n    const onSelectItem = ({ type, order, name}) => {\n        onClickSortType({\n            type: type,\n            order: order,\n            name: name\n        });\n        setVisiblePopUp(false);\n    };\n\n    const toggleVisiblePopUp = () => {\n        setVisiblePopUp(!visiblePopUp);\n    };\n\n    return(\n        <div ref={sortRef} \n        className=\"sort\">\n            <div className=\"sort__label\">\n                <svg\n                    className={visiblePopUp ? 'rotated' : ''}\n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    /> \n                </svg>\n                <b>Sort by:</b>\n                <span onClick={toggleVisiblePopUp}>{activeLabel}</span>\n            </div>\n            {visiblePopUp && (\n                <div className=\"sort__popup\">\n                    <ul>\n                        {items &&\n                            items.map( (obj, index) => {\n                                return <li \n                                    onClick={() => onSelectItem(obj)}\n                                    key={ `${obj.name}_${index}` }\n                                    className={activeSortType === obj.name ? 'active' : '' }\n                                >\n                                    {obj.name}\n                                </li>   \n                            })\n                        }\n                    </ul>\n                </div>\n                )\n            }\n        </div>\n    )\n}\n)\n\nexport default SortPopUp;\n","import axios from 'axios';\n\nexport const setLoaded = (value) => ({\n    type: 'SET_LOADED',\n    payload: value,\n});\n\nexport const fetchPizzas = (category, sortBy) => (dispatch) => {\n    dispatch(setLoaded(false));\n    axios.get(`https://my-json-server.typicode.com/widespreadtruck/dbForPizzaStore/pizzas?${\n        category !== null ? `category=${category}` : ``\n        }&_sort=${sortBy.type}&_order=${sortBy.order}`)\n        .then(({ data }) => {\n            dispatch(setPizzas(data));\n        });\n    };\n\n\nexport const setPizzas = (items) => ({\n    type: 'SET_PIZZAS',\n    payload: items,\n});\n\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategory, setSortBy, setMiniCategory } from '../redux/actions/filters';\nimport { fetchPizzas } from '../redux/actions/pizzas';\nimport { addPizzaToCart } from '../redux/actions/cart';\n\nimport {\n    PizzaBlock,\n    Categories,\n    SortPopUp,\n    PizzaLoadingBlock,\n    CategoriesPopUp\n} from '../components/index.js';\n\nconst categoryNames = [\"Meat\", \"Vegetarian\", \"Grill\", \"Spicy\" ];\nconst sortItems = [\n    { name: \"popularity\", type: \"rating\", order: 'desc' },\n    { name: \"price\", type: \"price\", order: 'desc' },\n    { name: \"alphabet\", type: \"name\", order: 'asc' }\n];\n\nconst Home = () => {\n    const dispatch = useDispatch();\n\n    const cartItems = useSelector( ( {cart} )=>cart.items)\n    //extracting from state: array of 10 pizzas\n    const items = useSelector((state) => state.pizzas.items);\n    //extracting from state: boolean value\n    const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\n    //destructuring the state & extracting from state: category & sortBy values from \"filters\"\n    const { category, sortBy} = useSelector( state => state.filters);\n\n\n    const handleAddPizzaToCart = obj => {\n        dispatch(addPizzaToCart(obj))\n    }\n\n    const onSelectCategory = React.useCallback((index) => {\n        dispatch(setCategory(index));\n    }, []);\n\n    const onSelectSortType = React.useCallback( (obj) => {\n        dispatch(setSortBy(obj))\n    }, [])\n\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n    const breakpoint = 1060;\n\n    React.useEffect( () => {\n        dispatch(fetchPizzas(category, sortBy));\n        const handleResizeWindow = () => setWidth(window.innerWidth);\n        // subscribe to window resize event \"onComponentDidMount\"\n        window.addEventListener(\"resize\", handleResizeWindow);\n        return () => {\n            // unsubscribe \"onComponentDestroy\"\n            window.removeEventListener(\"resize\", handleResizeWindow);\n        };\n    }, [category, sortBy]);\n    \n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"content__top\">\n                    {\n                        (width > breakpoint)\n                            ? <Categories\n                                items={categoryNames}\n                                onClickCategory={onSelectCategory}\n                                activeCategory={category}\n                            />\n                            : <CategoriesPopUp \n                                items={categoryNames}\n                                onClickCategory={onSelectCategory}\n                                activeCategory={category}\n                            />\n                    }\n                    \n\n                    <SortPopUp\n                        items={sortItems}\n                        onClickSortType={onSelectSortType}\n                        activeSortType={sortBy.name}\n                    />\n\n                </div>\n                {/* <h2 className=\"content__name\">All pizzas</h2> */}\n                <div className=\"content__items\">\n                {\n                    isLoaded\n                    ? items.map((obj) =>  \n                        <PizzaBlock \n                        //using Rest Parameter to pass down the multiple params\n                            onClickAddPizza={handleAddPizzaToCart}\n                            {...obj}\n                            key={obj.id} \n                            categoryUpdated={category}\n                            addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\n                        />)\n                    : \n                    Array(12)\n                        .fill(0)\n                        .map((_, index) => <PizzaLoadingBlock key={index} />)\n                }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","export const addPizzaToCart = (obj) => ({\n    type: 'ADD_PIZZA_CART',\n    payload: obj\n});\n\nexport const clearCart = () => ({\n    type: 'CLEAR_CART'\n});\n\nexport const removeCartItem = (id) => ({\n    type: 'REMOVE_CART_ITEM',\n    payload: id\n});\n\nexport const removeOneItem = (id) => ({\n    type: 'REMOVE_ONE_ITEM',\n    payload: id\n});\nexport const addOneItem = (id) => ({\n    type: 'ADD_ONE_ITEM',\n    payload: id\n});","//action creators\nexport const setSortBy = (name) => ({\n    type: 'SET_SORT_BY',\n    payload: name,\n});\n\nexport const setCategory = (catIndex) => ({\n    type: 'SET_CATEGORY',\n    payload: catIndex,\n});\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PizzaLogo from '../../assets/img/pizza-logo.svg';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Header = () => {\n    const { totalPrice, totalCount } = useSelector( (state) => ({\n        totalPrice: state.cart.totalPrice,\n        totalCount: state.cart.totalCount\n    }));\n\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <Link to=\"/online-store\" >\n                    <div className=\"header__logo\">\n                        <div className=\"header__logo_emoji\">🍕</div>\n                        <div className=\"header__logo_titles\">\n                            <h1>Tasty Pizza</h1>\n                            <p>Best pizza in the World</p>\n                        </div>\n                    </div>\n                </Link>\n                <Link to=\"/cart\">\n                    <div className=\"header__cart\">\n                        <a className=\"button button--cart\">\n                            <span>${totalPrice}</span>\n                            <div className=\"button__delimiter\"></div>\n                            <svg\n                                width=\"18\"\n                                height=\"18\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <span>{totalCount}</span>\n                        </a>\n                    </div>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport { CartItem, EmptyCart, Button, ClearCart } from '../components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addOneItem, removeOneItem, removeCartItem } from '../redux/actions/cart';\nimport { Link } from 'react-router-dom';\n\nconst Cart = () => {\n    const dispatch = useDispatch();\n\n    const handleRemoveOneItem = (id) => {\n        dispatch(removeOneItem(id))\n    };\n    const handleAddOneItem = (id) => {\n        dispatch(addOneItem(id))\n    };\n\n    const onRemoveItem = (id) => {\n        dispatch(removeCartItem(id))\n    };\n\n    //extract data from state\n    const {totalPrice, totalCount, items} = useSelector((state) => state.cart)\n    //map through added to cart pizzas\n    const addedPizzas = Object.keys(items).map( key => {\n        return items[key].items[0]\n    });\n    const isCartEmpty = Object.values(items).flat();\n\n\n\n    return (\n        <div className=\"content\">\n            <div className=\"container container--cart\">\n                <div className=\"cart\">\n                    <div className=\"cart__top\">\n                        <h2 className=\"content__title\">\n                            <span>🛒</span>Cart\n                        </h2>\n                        {\n                            isCartEmpty.length !== 0\n                            ? <ClearCart />\n                            : ''\n                        }\n                        \n                    </div>\n                    <div className=\"cart__items\">\n                        {isCartEmpty.length !== 0\n                            ? addedPizzas.map( (obj)=>\n                                    <CartItem \n                                        id={obj.id}\n                                        name={obj.name}\n                                        type={obj.type}\n                                        size={obj.size}\n                                        imageUrl={obj.imageUrl}\n                                        totalPrice={items[obj.id].totalPrice}\n                                        totalCount={items[obj.id].items.length}\n                                        onRemove={onRemoveItem}\n                                    onRemoveOneItem={handleRemoveOneItem}\n                                    onAddOneItem={handleAddOneItem}\n                                    />\n                                )\n                            : \n                            <EmptyCart />\n                        }\n                    </div>\n                    {\n                        isCartEmpty.length !== 0 \n                        ? \n                        <div className=\"cart__bottom\">\n                            <div className=\"cart__bottom-details\">\n                                <span> Total items: <b>{totalCount}</b> </span>\n                                <span> Total price: <b>${totalPrice}</b> </span>\n                            </div>\n                            <div className=\"cart__bottom-buttons\">\n                                <Link to=\"/online-store\">\n                                    <Button className=\"button button--outline button--add go-back-btn\">\n                                        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                        <span>Back</span>\n                                    </Button>\n                                </Link>\n                                <Button className=\"button pay-btn\">\n                                    <span>Pay</span>\n                                </Button>\n                            </div>\n                        </div>\n                        :\n                        <></>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction PizzaLoadingBlock() {\n    return (\n        <ContentLoader\n            className=\"pizza-block\"\n            speed={2}\n            width={300}\n            height={460}\n            viewBox=\"0 0 280 460\"\n            backgroundColor=\"#f3f3f3\"\n            foregroundColor=\"#ecebeb\"\n        >\n            <circle cx=\"141\" cy=\"130\" r=\"121\" />\n            <rect x=\"0\" y=\"268\" rx=\"10\" ry=\"10\" width=\"274\" height=\"35\" />\n            <rect x=\"0\" y=\"318\" rx=\"10\" ry=\"10\" width=\"135\" height=\"40\" />\n            <rect x=\"141\" y=\"318\" rx=\"10\" ry=\"10\" width=\"135\" height=\"40\" />\n            <rect x=\"0\" y=\"363\" rx=\"10\" ry=\"10\" width=\"90\" height=\"40\" />\n            <rect x=\"93\" y=\"363\" rx=\"10\" ry=\"10\" width=\"90\" height=\"40\" />\n            <rect x=\"186\" y=\"363\" rx=\"10\" ry=\"10\" width=\"90\" height=\"40\" />\n            <rect x=\"0\" y=\"410\" rx=\"0\" ry=\"0\" width=\"123\" height=\"35\" />\n            <rect x=\"166\" y=\"408\" rx=\"10\" ry=\"10\" width=\"110\" height=\"44\" />\n        </ContentLoader>\n    )\n}\n\nexport default PizzaLoadingBlock;\n","import React from 'react';\nimport Button from '../Button/Button'\n\nconst CartItem = ({ id, name, type, size, imageUrl, totalPrice, totalCount, onRemove, onRemoveOneItem, onAddOneItem }) => {\n\n    const handleRemoveClick = () => {\n        onRemove(id)\n    }\n\n    const handleRemoveItem = () => {\n        onRemoveOneItem(id)\n    };\n\n    const handleAddItem = () => {\n        onAddOneItem(id)\n    };\n\n    return (\n        <div className=\"cart__item\">\n            <div className=\"cart__item-img\">\n                <img\n                    className=\"pizza-block__image\"\n                    src={imageUrl}\n                    alt=\"Pizza\"\n                />\n            </div>\n            <div className=\"cart__item-info\">\n                <h3>{name}</h3>\n                <p>{type}, {size} cm.</p>\n            </div>\n            <div className=\"cart__item-count\">\n                <div onClick={handleRemoveItem} className=\"button button--outline button--circle cart__item-count-minus\">\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\n                    </svg>\n\n                </div>\n                <b>{totalCount}</b>\n                <div onClick={handleAddItem} className=\"button button--outline button--circle cart__item-count-plus\">\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\n                    </svg>\n\n                </div>\n            </div>\n            <div className=\"cart__item-price\">\n                <b>${totalPrice}</b>\n            </div>\n            <div className=\"cart__item-remove\">\n                <Button \n                    className=\"button--circle\"\n                    outline\n                    onClick={handleRemoveClick}\n                >\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\n                    </svg>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst CategoriesPopUp = React.memo(function SortPopUp({ items, onClickCategory, activeCategory }) {\n    const [visiblePopUp, setVisiblePopUp] = useState(false);\n    // const activeLabel = useSelector( (state) => state.filters.category)\n    // const [activeLabel, setActiveLabel] = useState(items[0])\n    const sortRef = useRef();\n    // let activeLabel = items.find((obj) => obj.name === activeSortType).name;\n\n    const currentSelection = useSelector( (state) => state.filters.category);\n    const onSelectItem = (index) => {\n        // setActiveLabel(category);\n        onClickCategory(index);\n        setVisiblePopUp(false);\n    };\n\n    const toggleVisiblePopUp = () => {\n        setVisiblePopUp(!visiblePopUp);\n    };\n\n    return (\n        <div ref={sortRef}\n            className=\"sort\">\n            <div className=\"sort__label\">\n                <svg\n                    className={visiblePopUp ? 'rotated' : ''}\n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    />\n                </svg>\n                <b>Type:</b>\n                <span onClick={toggleVisiblePopUp}>{activeCategory === null ? 'All' : items[currentSelection]}</span>\n            </div>\n            {visiblePopUp && (\n                <div className=\"sort__popup categoriesPopUp\">\n                    <ul>\n                        <li className={activeCategory === null ? 'active' : ''} onClick={() => onSelectItem(null)}>All</li>\n                        {items &&\n                            items.map((category, index) => {\n                                return <li\n                                    onClick={() => onSelectItem(index)}\n                                    key={`${category}_${index}`}\n                                    className={activeCategory === index ? 'active' : ''}\n                                >\n                                    {category}\n                                </li>\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n            }\n        </div>\n    )\n}\n)\n\nexport default CategoriesPopUp;\n","import React from 'react';\nimport emptyCartImg from '../../assets/img/empty-cart.png';\nimport { Button } from '../../components';\nimport { Link } from 'react-router-dom';\n\nconst EmptyCart = () => {\n    return (\n        <>\n            <p className=\"cart__emoji\">🕵️‍♀️🕵️‍♂️</p>\n            <p className=\"cart__empty\">Our detectives report your cart looks empty... Go to the Home page to find best pizzas!</p>\n            <Link to=\"/online-store\">\n                <div className=\"btn-wrapper\">\n                <Button className=\"button button--outline button--add go-home-btn\">\n                    <span>Home</span>\n                </Button>\n            </div>\n            </Link>\n        </>\n    )\n}\n\nexport default EmptyCart;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearCart } from '../../redux/actions/cart';\n\nconst ClearCart = () => {\n    const dispatch = useDispatch();\n\n    const handleClearCart = React.useCallback(() => {\n        dispatch(clearCart());\n    })\n    return (\n        <div\n            onClick={handleClearCart}\n            className=\"cart__clear\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                <path d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n            </svg>\n            <span>Clear cart</span>\n        </div>\n    )\n}\n\nexport default ClearCart;\n","import React, { } from 'react';\r\nimport './scss/app.scss';\r\nimport { Header, Home, Cart } from './components/index';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <Router>\r\n      <div className =\"wrapper\">\r\n        <Header />\r\n        <div className=\"content\">\r\n          <Route path=\"/online-store\" component={Home} exact/>\r\n          <Route path=\"/cart\" component={Cart} exact/>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     items: state.pizzas.items,\r\n//     filters: state.filters,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     setPizzas: (items) => dispatch(setPizzasAction(items)),\r\n//     dispatch,\r\n//   }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const initialState = {\n    category: null,\n    sortBy: {\n        type: 'popularity',\n        order: 'desc',\n        name: 'popularity'\n    },\n};\n\n\nconst filters = (state = initialState, action) => {\n    if (action.type === 'SET_SORT_BY') {\n        return {\n            ...state,\n            sortBy: action.payload,\n        };\n    }\n    if (action.type === 'SET_CATEGORY') {\n        return {\n            ...state,\n            category: action.payload,\n        };\n    }\n    return state;\n};\n\nexport default filters;","const initialState = {\n    items: [],\n    isLoaded: false, \n};\n\n\nconst pizzas = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_PIZZAS':\n            return {\n                ...state,\n                items: action.payload,\n                isLoaded: true\n            }\n        \n        case 'SET_LOADED':\n            return {\n                ...state,\n                isLoaded: action.payload,\n            }\n    \n        default:\n            return state;\n    }\n};\n\nexport default pizzas;","import { setPizzas } from '../actions/pizzas';\n\nconst initialState = {\n    items: {},\n    totalPrice: 0,\n    totalCount: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => {\n    return obj.price + sum\n}, 0);\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PIZZA_CART':\n            const currentPizzaItems = !state.items[action.payload.id]\n                        ? [action.payload]\n                        : [...state.items[action.payload.id].items, action.payload];\n\n            const newItems = {\n                ...state.items,\n                [action.payload.id]: {\n                    items: currentPizzaItems,\n                    totalPrice: getTotalPrice(currentPizzaItems),\n                }\n            };\n\n            const totalCount = Object.keys(newItems).reduce((sum, key) => newItems[key].items.length + sum, 0);\n            const totalPrice = Object.keys(newItems).reduce((sum, key) => newItems[key].totalPrice + sum, 0);\n\n            return {\n                ...state,\n                items: newItems,\n                totalCount,\n                totalPrice,\n            };\n\n        case 'CLEAR_CART':\n            return {\n                ...state,\n                items: {},\n                totalPrice: 0,\n                totalCount: 0,\n            };\n\n\n        case 'REMOVE_CART_ITEM':\n            const updatedItems = {\n                ...state.items\n            }\n            const currentTotalPrice = updatedItems[action.payload].totalPrice;\n            const currentTotalCount = updatedItems[action.payload].items.length;\n            delete updatedItems[action.payload];\n\n            return {\n                ...state,\n                items: updatedItems,\n                totalPrice: state.totalPrice - currentTotalPrice,\n                totalCount: state.totalCount - currentTotalCount,\n            };\n\n        case 'REMOVE_ONE_ITEM': {\n        const oldItems = state.items[action.payload].items;\n        const newItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n        const updatedItems = {\n            ...state.items\n        };\n        const currentTotalPrice = updatedItems[action.payload].items[0].price;\n\n\n            return {\n                ...state,\n                items: {\n                    ...state.items,\n                    [action.payload]: {\n                        items: newItems,\n                        totalPrice: getTotalPrice(newItems),\n                    }\n                },\n                totalPrice: oldItems.length > 1 ? state.totalPrice - currentTotalPrice : state.totalPrice,\n                totalCount: oldItems.length > 1 ? state.totalCount - 1 : state.totalCount,\n            }\n        };\n\n        case 'ADD_ONE_ITEM': {\n        const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n\n            return {\n                ...state,\n                items: {\n                    ...state.items,\n                    [action.payload]: {\n                        items: newItems,\n                        totalPrice: getTotalPrice(newItems),\n                    }\n                },\n                totalPrice: state.totalPrice + state.items[action.payload].items[0].price,\n                totalCount: state.totalCount + 1,\n            }\n        };\n\n        default:\n            return state;\n    };\n}\n\nexport default cart;","import filtersReducer from './filters';\nimport pizzasReducer from './pizzas';\nimport cartReducer from './cart';\nimport {combineReducers} from 'redux';\n\nconst rootReducer = combineReducers({\n    filters: filtersReducer,\n    pizzas: pizzasReducer,\n    cart: cartReducer\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\n//installing Redux browser extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer, \n    composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//importing Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}